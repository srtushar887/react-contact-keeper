{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios'; // import uuid from 'uuid/v4';\n\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //add contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.res.msg\n      });\n    }\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\nimport axios from 'axios';\n// import uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts : [],\n        current : null,\n        filtered : null\n    };\n\n\n    const [state, dispatch] = useReducer(contactReducer,initialState);\n\n    //add contact\n    const addContact = async contact => {\n\n        const config={\n            headers:{\n                'Content-type' : 'application/json'\n            }\n        }\n\n        try{\n            const res = await axios.post('/api/contacts',contact,config);\n            dispatch({\n                type:ADD_CONTACT,\n                payload:res.data\n            })\n\n        }catch (err) {\n            dispatch({type : CONTACT_ERROR,payload : err.res.msg});\n        }\n\n\n        dispatch({type : ADD_CONTACT,payload : contact});\n    }\n\n\n    //delete contact\n    const deleteContact = id => {\n        dispatch({type : DELETE_CONTACT,payload : id});\n    }\n\n    //set current contact\n    const setCurrent = contact => {\n        dispatch({type : SET_CURRENT,payload : contact});\n    }\n\n\n    //clear current contact\n    const clearCurrent = () => {\n        dispatch({type : CLEAR_CURRENT});\n    }\n\n    //update contact\n    const updateContact = contact => {\n        dispatch({type : UPDATE_CONTACT,payload : contact});\n    }\n\n    //filter contacts\n    const filterContacts = text => {\n        dispatch({type : FILTER_CONTACTS,payload : text});\n    }\n\n    //clear filter\n    const clearFilter = () => {\n        dispatch({type : CLEAR_FILTER});\n    }\n\n\n\n\n    return (\n        <ContactContext.Provider value={{\n            contacts : state.contacts,\n            current : state.current,\n            filtered : state.filtered,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            filterContacts,\n            clearFilter\n        }}>\n            { props.children}\n        </ContactContext.Provider>\n    )\n}\n\n\nexport default ContactState;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}