{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from 'axios'; // import uuid from 'uuid/v4';\n\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //get contacts\n\n  const getContact = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.res.msg\n      });\n    }\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //add contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.res.msg\n      });\n    }\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContact","res","get","type","payload","data","err","msg","contact","addContact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\nimport axios from 'axios';\n// import uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts : [],\n        current : null,\n        filtered : null,\n        error : null\n    };\n\n\n    const [state, dispatch] = useReducer(contactReducer,initialState);\n\n\n    //get contacts\n    const getContact = async () => {\n\n        try{\n            const res = await axios.get('/api/contacts');\n            dispatch({\n                type:GET_CONTACTS,\n                payload:res.data\n            })\n\n        }catch (err) {\n            dispatch({type : CONTACT_ERROR,payload : err.res.msg});\n        }\n\n\n        dispatch({type : ADD_CONTACT,payload : contact});\n    }\n\n\n    //add contact\n    const addContact = async contact => {\n\n        const config={\n            headers:{\n                'Content-type' : 'application/json'\n            }\n        }\n        try{\n            const res = await axios.post('/api/contacts',contact,config);\n            dispatch({\n                type:ADD_CONTACT,\n                payload:res.data\n            })\n\n        }catch (err) {\n            dispatch({type : CONTACT_ERROR,payload : err.res.msg});\n        }\n\n\n        dispatch({type : ADD_CONTACT,payload : contact});\n    }\n\n\n    //delete contact\n    const deleteContact = id => {\n        dispatch({type : DELETE_CONTACT,payload : id});\n    }\n\n    //set current contact\n    const setCurrent = contact => {\n        dispatch({type : SET_CURRENT,payload : contact});\n    }\n\n\n    //clear current contact\n    const clearCurrent = () => {\n        dispatch({type : CLEAR_CURRENT});\n    }\n\n    //update contact\n    const updateContact = contact => {\n        dispatch({type : UPDATE_CONTACT,payload : contact});\n    }\n\n    //filter contacts\n    const filterContacts = text => {\n        dispatch({type : FILTER_CONTACTS,payload : text});\n    }\n\n    //clear filter\n    const clearFilter = () => {\n        dispatch({type : CLEAR_FILTER});\n    }\n\n\n\n\n    return (\n        <ContactContext.Provider value={{\n            contacts : state.contacts,\n            current : state.current,\n            filtered : state.filtered,\n            error : state.error,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent,\n            updateContact,\n            filterContacts,\n            clearFilter,\n            getContact\n\n        }}>\n            { props.children}\n        </ContactContext.Provider>\n    )\n}\n\n\nexport default ContactState;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}