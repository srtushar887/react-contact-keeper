{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"ami\",\n      email: \"ami@ami.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"twi\",\n      email: \"twi@twi.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"sei\",\n      email: \"sei@sei.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }]\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //add contact\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //delete contact\n  //set current contact\n  //clear current contact\n  //update contact\n  //filter contacts\n  //clear filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","id","name","email","phone","type","state","dispatch","addContact","contact","v4","payload","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,EAQIC,SARJ,EASIC,YATJ,QAUO,UAVP;;AAaA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAG,CACP;AACIC,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KADO,EAQP;AACIJ,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KARO,EAeP;AACIJ,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KAfO;AADM,GAArB;AA2BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACG,cAAD,EAAgBY,YAAhB,CAApC,CA5B0B,CA8B1B;;AACA,QAAMS,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACR,EAAR,GAAahB,IAAI,CAACyB,EAAL,EAAb;AACAH,IAAAA,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAGjB,WAAR;AAAoBuB,MAAAA,OAAO,EAAGF;AAA9B,KAAD,CAAR;AACH,GAHD,CA/B0B,CAqC1B;AAGA;AAGA;AAGA;AAGA;AAGA;;;AAMA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC5BT,MAAAA,QAAQ,EAAGM,KAAK,CAACN,QADW;AAE5BQ,MAAAA;AAF4B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIMV,KAAK,CAACc,QAJZ,CADJ;AAQH,CAlED;;AAqEA,eAAef,YAAf","sourcesContent":["import React, {useReducer} from \"react\";\nimport uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    SET_ALERT,\n    REMOVE_ALERT,\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts : [\n            {\n                id : 1,\n                name : \"ami\",\n                email : \"ami@ami.com\",\n                phone : \"123\",\n                type : \"personal\"\n            },\n            {\n                id : 2,\n                name : \"twi\",\n                email : \"twi@twi.com\",\n                phone : \"123\",\n                type : \"personal\"\n            },\n            {\n                id : 3,\n                name : \"sei\",\n                email : \"sei@sei.com\",\n                phone : \"123\",\n                type : \"personal\"\n            }\n        ]\n    };\n\n\n    const [state, dispatch] = useReducer(contactReducer,initialState);\n\n    //add contact\n    const addContact = contact => {\n        contact.id = uuid.v4();\n        dispatch({type : ADD_CONTACT,payload : contact});\n    }\n\n\n    //delete contact\n\n\n    //set current contact\n\n\n    //clear current contact\n\n\n    //update contact\n\n\n    //filter contacts\n\n\n    //clear filter\n\n\n\n\n\n    return (\n        <ContactContext.Provider value={{\n            contacts : state.contacts,\n            addContact\n        }}>\n            { props.children}\n        </ContactContext.Provider>\n    )\n}\n\n\nexport default ContactState;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}