{"ast":null,"code":"import { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload],\n        loading: false\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","CONTACT_ERROR","state","action","type","contacts","payload","loading","filter","contact","id","map","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACIA,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,SATJ,EAUIC,YAVJ,EAUkBC,aAVlB,QAWO,UAXP;AAcA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,YAAL;AACI,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,QAAAA,OAAO,EAAG;AAHL,OAAP;;AAKJ,SAAKf,WAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAmBF,MAAM,CAACG,OAA1B,CAFP;AAGHC,QAAAA,OAAO,EAAG;AAHP,OAAP;;AAKJ,SAAKd,cAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAFP;AAGHC,QAAAA,OAAO,EAAG;AAHP,OAAP;;AAKJ,SAAKX,cAAL;AACI,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAmBF,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAlF,CAFL;AAGHF,QAAAA,OAAO,EAAG;AAHP,OAAP;;AAKJ,SAAKb,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHU,QAAAA,OAAO,EAAGT,MAAM,CAACG;AAFd,OAAP;;AAIJ,SAAKX,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHU,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKf,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHW,QAAAA,QAAQ,EAAGX,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAI;AACxC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAA+B,IAA/B,CAAd;AACA,iBAAOG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACH,SAHU;AAFR,OAAP;;AAOJ,SAAKhB,YAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHW,QAAAA,QAAQ,EAAG;AAFR,OAAP;;AAIJ,SAAKZ,aAAL;AACI,aAAO,EACL,GAAGC,KADE;AAELiB,QAAAA,KAAK,EAAGhB,MAAM,CAACG;AAFV,OAAP;;AAMJ;AACI,aAAOJ,KAAP;AAxDR;AA0DH,CA3DD","sourcesContent":["import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    SET_ALERT,\n    REMOVE_ALERT, CONTACT_ERROR,\n} from '../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_CONTACTS:\n            return {\n              ...state,\n              contacts: action.payload,\n              loading : false,\n            };\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts :[...state.contacts,action.payload],\n                loading : false,\n            };\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\n                loading : false,\n            };\n        case UPDATE_CONTACT:\n            return {\n              ...state,\n              contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n                loading : false,\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current : action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered : state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`,'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered : null\n            };\n        case CONTACT_ERROR:\n            return {\n              ...state,\n              error : action.payload\n            };\n\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}