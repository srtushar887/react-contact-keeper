{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext.js';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors();\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onchange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const onsubmit = e => {\n    e.preventDefault();\n\n    if (email === \"\" || password === \"\") {\n      setAlert('Please fill in al field', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Account \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    value: email,\n    onChange: onchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    value: password,\n    onChange: onchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","user","setUser","email","password","onchange","e","target","name","value","onsubmit","preventDefault"],"mappings":"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","sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext.js';\n\nconst Login = (props) => {\n\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n\n    const {setAlert } = alertContext;\n\n    const {login,error,clearErrors,isAuthenticated } = authContext;\n\n    useEffect(() => {\n\n        if (isAuthenticated){\n            props.history.push('/');\n        }\n\n        if (error === 'Invalid Credentials'){\n            setAlert(error,'danger');\n            clearErrors();\n        }\n\n        // eslint-disable-next-line\n\n    },[error,isAuthenticated,props.history]);\n\n\n\n    const [user, setUser] = useState({\n        email : '',\n        password : '',\n    });\n\n    const { email, password} = user;\n\n    const onchange = e => setUser({...user,[e.target.name] : e.target.value});\n\n    const onsubmit =e=>{\n        e.preventDefault();\n        if (email === \"\" || password === \"\"){\n            setAlert('Please fill in al field','danger');\n        }else {\n            login({\n                email, password\n            })\n        }\n    }\n\n\n    return (\n        <div className=\"form-container\">\n            <h1>\n                Account <span className=\"text-primary\">Login</span>\n            </h1>\n            <form onSubmit={onsubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" required value={email} onChange={onchange}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" required value={password} onChange={onchange}/>\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\n            </form>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}