{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    addContact,\n    clearCurrent,\n    updateContact,\n    current\n  } = contactContext;\n  useEffect(() => {\n    if (current != null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [contactContext, current]);\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onsubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    clearAll();\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onsubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, current ? 'Edit Contact' : \"Add Contact\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Contact Type\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), \"Personal\", '', /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), \"professional\", /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : \"Add Contact\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), current && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-white btn-block\",\n    onClick: clearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useContext","useState","useEffect","ContactContext","ContactForm","contactContext","addContact","clearCurrent","updateContact","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onsubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport ContactContext from '../../context/contact/contactContext'\nconst ContactForm = () => {\n\n    const contactContext = useContext(ContactContext);\n\n    const {addContact,clearCurrent, updateContact, current} = contactContext;\n\n    useEffect(() => {\n        if (current != null){\n            setContact(current);\n        }else {\n            setContact({\n                name : '',\n                email : '',\n                phone : '',\n                type : 'personal',\n            });\n        }\n    }, [contactContext,current])\n\n    const [contact, setContact] = useState({\n        name : '',\n        email : '',\n        phone : '',\n        type : 'personal',\n    });\n\n    const {name, email, phone, type } = contact;\n\n    const onChange = e => setContact({...contact, [e.target.name] : e.target.value});\n\n    const onsubmit = e => {\n        e.preventDefault();\n        if (current === null){\n            addContact(contact);\n        }else {\n            updateContact(contact);\n        }\n        clearAll();\n\n    };\n\n    const clearAll = () => {\n        clearCurrent();\n    };\n\n\n\n    return (\n        <form onSubmit={onsubmit}>\n            <h2 className=\"text-primary\">{current ? 'Edit Contact' : \"Add Contact\"}</h2>\n            <input type=\"text\" placeholder=\"name\" name=\"name\" value={name} onChange={onChange}/>\n            <input type=\"email\" placeholder=\"email\" name=\"email\" value={email} onChange={onChange}/>\n            <input type=\"text\" placeholder=\"phone\" name=\"phone\" value={phone} onChange={onChange}/>\n            <h5>Contact Type</h5>\n            <input type=\"radio\" name=\"type\" value=\"personal\" checked={type === 'personal'} onChange={onChange}/>Personal{''}\n            <input type=\"radio\" name=\"type\" value=\"professional\" checked={type === 'professional'} onChange={onChange}/>professional\n            <div>\n                <input type=\"submit\" value={current ? 'Update Contact' : \"Add Contact\"} className=\"btn btn-primary btn-block\"/>\n            </div>\n            {current && <div>\n                <button className=\"btn btn-white btn-block\" onClick={clearAll}>Clear</button>\n            </div>}\n        </form>\n    );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}