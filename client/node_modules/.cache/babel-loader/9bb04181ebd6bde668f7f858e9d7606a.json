{"ast":null,"code":"var _jsxFileName = \"/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"ami\",\n      email: \"ami@ami.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"twi\",\n      email: \"twi@twi.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"sei\",\n      email: \"sei@sei.com\",\n      phone: \"123\",\n      type: \"personal\"\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //add contact\n\n  const addContact = contact => {\n    contact.id = uuid;\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //update contact\n  //filter contacts\n  //clear filter\n\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/home/tusher/Documents/node_pro/contact_keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,eANJ,EAOIC,YAPJ,EAQIC,SARJ,EASIC,YATJ,QAUO,UAVP;;AAaA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAG,CACP;AACIC,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KADO,EAQP;AACIJ,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KARO,EAeP;AACIJ,MAAAA,EAAE,EAAG,CADT;AAEIC,MAAAA,IAAI,EAAG,KAFX;AAGIC,MAAAA,KAAK,EAAG,aAHZ;AAIIC,MAAAA,KAAK,EAAG,KAJZ;AAKIC,MAAAA,IAAI,EAAG;AALX,KAfO,CADM;AAwBjBC,IAAAA,OAAO,EAAG;AAxBO,GAArB;AA4BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxB,UAAU,CAACG,cAAD,EAAgBY,YAAhB,CAApC,CA7B0B,CA+B1B;;AACA,QAAMU,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACT,EAAR,GAAahB,IAAb;AACAuB,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAGjB,WAAR;AAAoBuB,MAAAA,OAAO,EAAGD;AAA9B,KAAD,CAAR;AACH,GAHD,CAhC0B,CAsC1B;;;AACA,QAAME,aAAa,GAAGX,EAAE,IAAI;AACxBO,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAGhB,cAAR;AAAuBsB,MAAAA,OAAO,EAAGV;AAAjC,KAAD,CAAR;AACH,GAFD,CAvC0B,CA2C1B;;;AACA,QAAMY,UAAU,GAAGH,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAGf,WAAR;AAAoBqB,MAAAA,OAAO,EAAGD;AAA9B,KAAD,CAAR;AACH,GAFD,CA5C0B,CAiD1B;;;AACA,QAAMI,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAGd;AAAR,KAAD,CAAR;AACH,GAFD,CAlD0B,CAsD1B;AAGA;AAGA;;;AAMA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC5BS,MAAAA,QAAQ,EAAGO,KAAK,CAACP,QADW;AAE5BM,MAAAA,OAAO,EAAGC,KAAK,CAACD,OAFY;AAG5BG,MAAAA,UAH4B;AAI5BG,MAAAA,aAJ4B;AAK5BC,MAAAA,UAL4B;AAM5BC,MAAAA;AAN4B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQMhB,KAAK,CAACiB,QARZ,CADJ;AAYH,CA9ED;;AAiFA,eAAelB,YAAf","sourcesContent":["import React, {useReducer} from \"react\";\nimport uuid from 'uuid/v4';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    SET_ALERT,\n    REMOVE_ALERT,\n} from '../types';\n\n\nconst ContactState = props => {\n    const initialState = {\n        contacts : [\n            {\n                id : 1,\n                name : \"ami\",\n                email : \"ami@ami.com\",\n                phone : \"123\",\n                type : \"personal\"\n            },\n            {\n                id : 2,\n                name : \"twi\",\n                email : \"twi@twi.com\",\n                phone : \"123\",\n                type : \"personal\"\n            },\n            {\n                id : 3,\n                name : \"sei\",\n                email : \"sei@sei.com\",\n                phone : \"123\",\n                type : \"personal\"\n            }\n        ],\n        current : null\n    };\n\n\n    const [state, dispatch] = useReducer(contactReducer,initialState);\n\n    //add contact\n    const addContact = contact => {\n        contact.id = uuid;\n        dispatch({type : ADD_CONTACT,payload : contact});\n    }\n\n\n    //delete contact\n    const deleteContact = id => {\n        dispatch({type : DELETE_CONTACT,payload : id});\n    }\n\n    //set current contact\n    const setCurrent = contact => {\n        dispatch({type : SET_CURRENT,payload : contact});\n    }\n\n\n    //clear current contact\n    const clearCurrent = () => {\n        dispatch({type : CLEAR_CURRENT});\n    }\n\n    //update contact\n\n\n    //filter contacts\n\n\n    //clear filter\n\n\n\n\n\n    return (\n        <ContactContext.Provider value={{\n            contacts : state.contacts,\n            current : state.current,\n            addContact,\n            deleteContact,\n            setCurrent,\n            clearCurrent\n        }}>\n            { props.children}\n        </ContactContext.Provider>\n    )\n}\n\n\nexport default ContactState;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}